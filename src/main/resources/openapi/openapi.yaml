
#file: noinspection YAMLDuplicatedKeys
openapi: 3.0.3
info:
  title: Expoll REST API
  description: This is the backend api documentation for expoll
  license:
    name: MIT
    url: https://github.com/Universumgames/expoll_server/blob/main/LICENSE
  version: 4.2.2
servers:
  - url: https://expoll.mt32.net/api
    description: the production server api
  - url: http://localhost:6060/
    description: local test server
  - url: http://192.168.178.68:6060
    description: local network testing

paths:
  /serverInfo:
    get:
      description: Get Meta info of backend server
      responses:
        "200":
          description: Meta json object
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  version:
                    type: "string"
                  compatibleVersions:
                    type: "array"
                    title: CompatibleVersionDescriptor
                    items:
                      type: "object"
                      additionalProperties:
                        from:
                          $ref: "#/components/schemas/VersionDescriptor"
                        to:
                          $ref: "#/components/schemas/VersionDescriptor"
                        exact:
                          $ref: "#/components/schemas/VersionDescriptor"
                        platform:
                          type: "string"
                          example: "ios"
  /test:
    get:
      responses:
        200:
          description: "test response"
          content:
            text/plain:
              schema:
                type: string
                example: "Hello World!"
  /ping:
    get:
      responses:
        200:
          description: "ping response"
          content:
            text/plain:
              schema:
                type: string
                example: "pong"
  /appInfo/{platform}:
    #file: noinspection YAMLSchemaValidation
    parameters:
      - name: platform
        in: path
        required: true
        schema:
          type: string
          enum:
            #- android
            - ios
            #- web
    get:
      responses:
        200:
          description: "app info response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformInfo"
            application/xml:
              schema:
  /metaInfo:
    get:
      responses:
        200:
          description: "meta request info"
  /simple/mailregex:
    #file: noinspection YAMLSchemaValidation
    get:
      summary: "Mail regex"
      description: "Mail regex"
      responses:
        200:
          description: "Mail regex"
          content:
            application/json:
              schema:
              type: "array"
              properties:
                id:
                  type: "string"
                regex:
                  type: "string"
                blacklist:
  /simple/poll/{pollid}/title:
    #file: noinspection YAMLSchemaValidation
    parameters:
      - name: pollid
        in: path
        required: true
        description: "The id of the poll"
        schema:
          type: "string"
    get:
      summary: "Get the title of a poll"
      description: "Get the title of a poll"
      responses:
        '200':
          description: "The title of the poll"
          content:
            text/plain:
              schema:
                type: "string"
  #file: noinspection YAMLSchemaValidation
  /poll:
    get:
      summary: "Get a poll or poll list"
      description: "Get a poll by its ID or the poll list"
      security:
        - bearerAuth: []
  
    query:
      summary: "Get a poll or poll list"
      description: "Get a poll by its ID or the poll list"
      security:
        - bearerAuth: []
    post:
      summary: "Create a new poll"
      description: "Create a new poll"
      security:
        - bearerAuth: []
    put:
      summary: "Edit a poll"
      description: "Edit a poll"
      security:
        - bearerAuth: []
  
  /poll/leave:
    post:
      summary: "Leave a poll"
      description: "Leave a poll"
      security:
        - bearerAuth: []
  
  /poll/join:
    post:
      summary: "Join a poll"
      description: "Join a poll"
      security:
        - bearerAuth: []
  
  /poll/hide:
    post:
      summary: "Hide a poll"
      description: "Hide a poll"
      security:
        - bearerAuth: []
  
  /poll/availableSearch:
    get:
      summary: "Get available search options"
  #file: noinspection YAMLSchemaValidation
  /vote:
    post:
      summary: Vote on a poll
      description: Vote on a poll
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoteChange"
      responses:
        200:
          description: "Vote was successful"
        401:
          description: "Unauthorized"
        403:
          description: "Voting not allowed or too many votes"
        406:
  #file: noinspection SwYamlUnresolvedReferencesInspection,YAMLSchemaValidation
  /notifications/preferences:
    get:
      summary: "Get notification preferences"
      description: "Get notification preferences"
      security:
        - BearerAuth: [ ]
      responses:
        200:
          description: "The notification preferences"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationPreferences"
    post:
      summary: "Update notification preferences"
      description: "Update notification preferences"
      security:
        - BearerAuth: [ ]
      requestBody:
            $ref: "#/components/schemas/NotificationPreferences"
      responses:
        200:
          description: "The updated notification preferences"
        401:
          description: "Unauthorized"
  
  /notifications/apple:
    post:
      summary: "Register Apple device"
      description: "Register Apple device"
      security:
        - BearerAuth: [ ]
      requestBody:
        $ref: "#/components/schemas/AppleRegistrationData"
      responses:
        200:
          description: "The device was registered"
        401:
          description: "Unauthorized"
    delete:
      summary: "Unregister Apple device"
      description: "Unregister Apple device"
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppleRegistrationData"
      responses:
        200:
          description: "The device was unregistered"
        401:
          description: "Unauthorized"
  
  /notifications/web:
    post:
      summary: "Register Web device"
      description: "Register Web device"
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
            application/json:
              schema:
                  $ref: "#/components/schemas/WebRegistrationData"
      responses:
        200:
          description: "The device was registered"
        401:
          description: "Unauthorized"
    delete:
      summary: "Unregister Web device"
      description: "Unregister Web device"
      security:
        - BearerAuth: [ ]
      requestBody:
          required: true
          content:
              application/json:
                schema:
                    $ref: "#/components/schemas/WebRegistrationData"
      responses:
        200:
          description: "The device was unregistered"
        401:

components:
  schemas:
    #file: noinspection YAMLSchemaValidation
    NotificationPreferences:
      type: object
      description: "Notification preferences for a user"
      title: "NotificationPreferences"
      properties:
        voteChanged:
          type: boolean
          example: true
        voteChangeDetailed:
          type: boolean
          example: true
        userAdded:
          type: boolean
          example: true
        userRemoved:
          type: boolean
          example: true
        pollDeleted:
          type: boolean
          example: true
        pollEdited:
          type: boolean
          example: true
        pollArchived:
          type: boolean
          example: true
        newLogin:
          type: boolean
          example: true
    AppleRegistrationData:
      type: object
      properties:
        deviceID:
        type: string
        description: "The device token"
        example: "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
    WebRegistrationData:
      type: object
      properties:
        endpoint:
          type: "string"
          description: "The endpoint"
          example: "https://fcm.googleapis.com/fcm/send/1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
        expirationTime:
          type: "string"
          description: "The expiration time"
          example: "2021-12-31T23:59:59Z"
        keys:
          type: list
          items:
            $ref: "#/components/schemas/WebRegistrationKeys"
    WebRegistrationKeys:
      type: object
      properties:
        p256dh:
          type: string
          description: "The p256dh key"
          example: "1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
        auth:
          type: string
          description: "The auth key"
    #file: noinspection YAMLSchemaValidation
    PlatformInfo:
      type: object
      description: "Information about the app for a specific platform"
      title: "PlatformInfo"
      properties:
        beta:
          type: object
          title: AppInfo
          properties:
            version:
              type: string
              example: "1.0.0"
            build:
              type: integer
              example: 1
            url:
              type: string
              example: "https://expoll.mt32.net/download/ios/beta/1.0.0/1"
            releasedTimestamp:
              type: integer
              example: 1620000000
        stable:
          type: object
          title: AppInfo
          properties:
            version:
              type: string
              example: "1.0.0"
            build:
              type: integer
              example: 1
            url:
              type: string
              example: "https://expoll.mt32.net/download/ios/stable/1.0.0/1"
            releasedTimestamp:
              type: integer
    VersionDescriptor:
      type: "object"
      title: "VersionDescriptor"
      nullable: true
      properties:
        version:
          type: "string"
          example: "4.2.2"
        build:
          type: "integer"
    #file: noinspection YAMLSchemaValidation
    VoteChange:
      type: object
      description: Request to vote on a poll
      properties:
        pollID:
          type: string
          description: The ID of the poll to vote on
          example: "60b3b3b3b3b3b3b3b3b3b3b3"
        optionID:
          type: string
          description: The ID of the option to vote for
          example: 127
        votedFor:
          type: integer
          description: The option the user voted for (see VoteValue)
          minimum: 0
          maximum: 2
          examples:
            No:
                value: 0
                summary: "vote for no"
            Yes:
                value: 1
                summary: "vote for yes"
            Maybe:
                value: 2
                summary: "vote for maybe"
        userID:
          optional: true
          type: string
          description: The ID of the user who voted (for admins)
    VoteValue:
      type: integer
      description: The value of the vote
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
